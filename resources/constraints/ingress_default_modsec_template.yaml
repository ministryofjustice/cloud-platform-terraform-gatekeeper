apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sdenydefaultmodsec
  annotations:
    description: This policy denies ingresses using default ingress-controller if they try to enable modsecurity.
spec:
  crd:
    spec:
      names:
        kind: k8sdenydefaultmodsec
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sdenydefaultmodsec
        violation[{"msg": msg}] {
          input.review.kind.kind == "Ingress"
          input.review.object.metadata.annotations["kubernetes.io/ingress.class"] == "nginx"
          input.review.object.metadata.annotations["nginx.ingress.kubernetes.io/enable-modsecurity"] == "true"
          msg := "mod-security is not allowed for default ingress"
        }
        violation[{"msg": msg}] {
          input.review.kind.kind == "Ingress"
          not input.review.object.metadata.annotations["kubernetes.io/ingress.class"]
          input.review.object.metadata.annotations["nginx.ingress.kubernetes.io/enable-modsecurity"] == "true"
          msg := "mod-security is not allowed for default ingress"
        }
        violation[{"msg": msg}] {
          input.review.kind.kind == "Ingress"
          input.review.object.metadata.annotations["kubernetes.io/ingress.class"] == "nginx"
          input.review.object.metadata.annotations["nginx.ingress.kubernetes.io/modsecurity-snippet"]
          msg := "modsecurity-snippet is not allowed for default ingress"
        }
        violation[{"msg": msg}] {
          input.review.kind.kind == "Ingress"
          not input.review.object.metadata.annotations["kubernetes.io/ingress.class"]
          input.review.object.metadata.annotations["nginx.ingress.kubernetes.io/modsecurity-snippet"]
          msg := "modsecurity-snippet is not allowed for default ingress"
        }