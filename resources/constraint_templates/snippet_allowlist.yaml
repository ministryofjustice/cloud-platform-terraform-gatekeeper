apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8ssnippetallowlist
  annotations:
    description: For create and update Ingress operations, check that none of the annotations contain forbidden values
spec:
  crd:
    spec:
      names:
        kind: k8ssnippetallowlist
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8ssnippetallowlist

        operations = {"CREATE", "UPDATE", ""}

        forbidden_value := "\\blua_|_lua\\b|_lua_|\\bkubernetes\\.io\\b|root|load_module"

        annotations := {
          "nginx.ingress.kubernetes.io/auth-snippet": forbidden_value,
          "nginx.ingress.kubernetes.io/configuration-snippet": forbidden_value,
          "nginx.ingress.kubernetes.io/server-snippet": forbidden_value,
          "nginx.ingress.kubernetes.io/modsecurity-snippet": forbidden_value,
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "Ingress"
          operations[input.review.operation]

          some key; regex.match(annotations[key], input.review.object.metadata.annotations[key])
          msg := sprintf("Ingress '%v/%v' contains unsafe directive(s) in '%v' annotation", [input.review.object.metadata.namespace, input.review.object.metadata.name, key])
        }
        
